import sounddevice as sd
import numpy as np
import librosa
from tensorflow.keras.models import load_model

# Teachable Machine model URL
sound_model_path = './my_model/'
model = load_model(sound_model_path + 'model.h5')  # Assuming you have a saved model in HDF5 format

# Function to preprocess audio data
def preprocess_audio(audio_data):
    spectrogram = librosa.feature.melspectrogram(audio_data, sr=44100, n_fft=1024, hop_length=512)
    spectrogram = librosa.power_to_db(spectrogram, ref=np.max)
    spectrogram = np.expand_dims(spectrogram, axis=-1)
    return spectrogram

# Function to predict class from audio data
def predict_class(audio_data):
    processed_data = preprocess_audio(audio_data)
    prediction = model.predict(np.expand_dims(processed_data, axis=0))[0]
    predicted_class_index = np.argmax(prediction)
    return predicted_class_index

# Function to start audio recording
def start_audio_recording():
    duration = 5  # recording duration in seconds
    audio_data = sd.rec(int(44100 * duration), samplerate=44100, channels=1, dtype='int16')
    sd.wait()
    return audio_data.flatten()

# Main function
def main():
    while True:
        input("Press Enter to start recording...")
        audio_data = start_audio_recording()
        predicted_class_index = predict_class(audio_data)
        print(f"Predicted Class Index: {predicted_class_index}")

if __name__ == "__main__":
    main()
